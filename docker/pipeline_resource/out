#!/bin/bash
# vim: set ft=sh

set +e

CHECK_ARGS=true

if [ -z "$CONCOURSE_URL"  ]
then
  echo "Please specify CONCOURSE_URL env variable"
  echo "It specifies the url to the concourse"
  CHECK_ARGS=false
fi

if [ -z "$CONCOURSE_TEAM"  ]
then
  echo "Please specify CONCOURSE_TEAM env variable"
  echo "It specifies the team to the concourse"
  CHECK_ARGS=false
fi

if [ -z "$CONCOURSE_USER" -o -z "$CONCOURSE_PASSWORD"  ]
then
  echo "Please specify CONCOURSE_USER and CONCOURSE_PASSWORD env variables"
  echo "It specifies a user to authenticate in concourse"
  CHECK_ARGS=false
else
  AUTHENTICATE="--username $CONCOURSE_USER --password $CONCOURSE_PASSWORD"
fi

if [ "$CHECK_ARGS" == "false" ]
then
    exit 1
fi

if [ ! -z "$INSECURE" ]
then
  INSECURE_VAR=" --insecure"
fi

fly --target trgt login$INSECURE_VAR \
    --concourse-url $CONCOURSE_URL \
    --team-name $CONCOURSE_TEAM \
    $AUTHENTICATE

set -e


      # get current pipeline configuration
      log "Getting pipeline configuration for $BUILD_PIPELINE_NAME"
      fly -t "$target" get-pipeline -p "$BUILD_PIPELINE_NAME" --json | jq -c '.' > "$pipeline_payload"

        # get pipeline configuration by adding and removing pipeline to concourse
      # TODO should be adapted by verify call, feature request added to GitHub: https://github.com/concourse/concourse/issues/747
      temporary_pipeline="pipelines-sync-$RANDOM"
      log "Getting pipeline configuration for $temporary_pipeline"
      fly -t "$target" get-pipeline -p "$temporary_pipeline" --json | jq -c '.' > "$pipeline_config"

      # grep current pipelines to know if it is a new or existing pipeline
      pipeline_name+="$reference"
      log "Checking if '$pipeline_name' already exists"
      if fly -t "$target" pipelines | grep "$pipeline_name"; then
        existing="true"
      fi



